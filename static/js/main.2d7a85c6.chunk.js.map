{"version":3,"sources":["services/api-service.js","helpers/styles.js","components/post-item.js","components/post-past-item.js","routes/paths.js","views/post-list.view.js","views/post-edit.view.js","views/post-new.view.js","layouts/app-bar.js","layouts/blog-layout.js","routes/route-utils.js","routes/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["url","apiService","getAllPost","a","axios","get","then","res","console","log","data","getPostDetail","id","deletePost","delete","status","createPost","post","title","text","editPost","postUpdate","useStyles","makeStyles","theme","button","margin","spacing","withoutLabel","marginTop","PostItem","onDelete","timestamp","classes","className","cols","length","substr","moment","format","Divider","light","Button","variant","color","startIcon","component","Link","to","onClick","PostPastItem","onCreate","titleElipsis","elpased","fromNow","List","ListItem","alignItems","ListItemText","primary","secondary","Fragment","BlogLayoutRoutes","items","path","name","props","history","React","useState","setData","useEffect","fetchData","catch","err","posts","push","Swal","fire","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","value","Grid","container","item","xs","replace","map","o","i","postId","useParams","Container","maxWidth","onSubmit","event","preventDefault","target","setTimeout","InputLabel","htmlFor","FormControl","fullWidth","TextField","multiline","rowsMax","defaultValue","rows","Box","root","flexGrow","menuButton","marginRight","BlogAppBar","AppBar","position","Toolbar","Typography","BlogLayout","children","renderRouteContainer","Layout","Component","index","exact","render","renderPublicRoutes","routes","topPath","renderRoutes","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d7a85c6.chunk.js","sourcesContent":["/* All API calls to the REST API */\r\nimport axios from \"axios\";\r\n\r\nconst url=\"https://restedblog.herokuapp.com/rameshg/api\";\r\n\r\n\r\n\r\nlet getAllPost = async () => {\r\n  return await axios\r\n    .get(url)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      return res.data;\r\n    });\r\n};\r\n\r\nlet getPostDetail = async (id) => {\r\n    console.log(id);\r\n  return await axios\r\n    //.get(`https://restedblog.herokuapp.com/rameshg/api/${id}`)\r\n    .get(`${url}/${id}`)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      return res.data;\r\n    });\r\n};\r\n\r\nlet deletePost = async (id) => {\r\n  console.log(id);\r\n  return axios\r\n    //.delete(`https://restedblog.herokuapp.com/rameshg/api/${id}`)\r\n    .delete(`${url}/${id}`)\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        return id;\r\n      }\r\n    });\r\n};\r\n\r\nlet createPost = async (post) => {\r\n  return axios\r\n    //.post(`https://restedblog.herokuapp.com/rameshg/api/`, { post })\r\n    .post(`${url}`, { title: post.title, text: post.text })\r\n    .then((res) => {\r\n      if (res.status === 201) {\r\n        const {\r\n          data: { id },\r\n        } = res;\r\n        return { ...post, id};\r\n      }\r\n    });\r\n};\r\n\r\nlet editPost = async (postUpdate) => {\r\n  const { id } = postUpdate;\r\n    console.log(postUpdate);\r\n  return axios\r\n   // .put(`https://restedblog.herokuapp.com/rameshg/api/${id}`, { postUpdate })\r\n    .post(`${url}/${id}`, { title: postUpdate.title, text: postUpdate.text })\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        return { ...postUpdate };\r\n      }\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const apiService = {\r\n    getAllPost,\r\n    getPostDetail,\r\n    deletePost,\r\n    createPost,\r\n    editPost\r\n};","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n  }));","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Swal} from 'sweetalert2';\r\n\r\nimport moment from \"moment\";\r\nimport { Paper, Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport KeyboardVoiceIcon from \"@material-ui/icons/KeyboardVoice\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport  {useStyles}  from \"../helpers\";\r\n\r\nexport const PostItem = ( { data, onDelete }) => {\r\n  \r\n  const { id, title, text, timestamp } = data;\r\n  const classes = useStyles();\r\n\r\n  const confirmDeletion = () => {\r\n   \r\n      \r\n     onDelete && onDelete(id);\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"post_title\" cols=\"10\">\r\n        <b>\r\n          <span className=\"post-preview\">\r\n            {title.length > 25 ? `${title.substr(0, 150)}...` : title}\r\n          </span>\r\n        </b>\r\n        &nbsp;&nbsp;&nbsp;\r\n        <span className=\"post_datestamp text-right\">\r\n          <b> {moment(timestamp).format('MMM DD, YYYY')}</b>\r\n        </span>\r\n      </p>\r\n      <Divider light />\r\n      <p className=\"post_body\">\r\n        <span className=\"post-preview\">\r\n          {text.length > 300 ? `${text.substr(0, 300)}...` : text}\r\n        </span>\r\n      </p>\r\n      <Divider light />\r\n\r\n     \r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n        component={Link}\r\n        to={`/posts/${id}`}\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={() => { confirmDeletion() }}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nexport const PostPastItem=({data,onCreate})=>{\r\n    const {id, title, timestamp} = data;\r\n    const titleElipsis =   title.length > 15 ? `${title.substr(0, 15)}...` : title;\r\n    const elpased=moment(timestamp).fromNow();\r\n   return (\r\n   \r\n    <List //className={classes.root}\r\n   >\r\n      {/* <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        startIcon={<SaveIcon />}\r\n        component={Link}\r\n        to={`/posts`}\r\n      >\r\n        Edit\r\n      </Button> */}\r\n    \r\n\r\n    <ListItem alignItems=\"flex-start\"  component={Link}\r\n        to={`/posts/${id}`}>\r\n     \r\n      <ListItemText\r\n        primary={titleElipsis}\r\n        secondary={\r\n          <React.Fragment>\r\n           \r\n            {elpased}\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </ListItem>\r\n    <Divider />\r\n    </List>)\r\n     \r\n    }\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport {PostListView} from '../views';\r\nimport { PostEditView } from \"../views/post-edit.view\";\r\nimport { PostAddEditView } from \"../views/post-new.view\";\r\n\r\nexport const PostRoutes= {\r\n  posts : '/',\r\n  postEdit:'/posts/:postId',\r\n  postCreate:'/post'\r\n}\r\n\r\n\r\nconst publicRoutes = {\r\n\r\n  items: [\r\n    {\r\n      path: PostRoutes.posts,\r\n      name: \"Posts\",\r\n      component: PostListView,\r\n    },\r\n    {\r\n      path: PostRoutes.postEdit,\r\n      name: \"Edit Post\",\r\n      component: PostEditView,\r\n    },\r\n    {\r\n      path: PostRoutes.postCreate,\r\n      name: \"Create Post\",\r\n      component: PostAddEditView,\r\n    },\r\n  ],\r\n};\r\nexport const BlogLayoutRoutes = [\r\n  publicRoutes\r\n];\r\n","import React from \"react\";\r\nimport { apiService } from \"../services\";\r\nimport { PostItem, PostPastItem } from \"../components\";\r\nimport Swal from 'sweetalert2';\r\nimport {Link} from 'react-router-dom';\r\nimport { Grid} from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport  {useStyles}  from \"../helpers\";\r\n\r\nexport const PostListView = (props) => {\r\n  const classes = useStyles();\r\n  const { history } = props;\r\n  const [data, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const posts = await apiService.getAllPost().catch((err) => console.log(err));\r\n\r\n    if (!!posts) setData(posts);\r\n  };\r\n  const onCreate = () => {\r\n    history.push(\"/posts/0\");\r\n  };\r\n  const onDelete = async(id) => {\r\n    \r\n     Swal.fire({\r\n                title: 'Confirm Delete this blog entry?',\r\n                text: \"This action can not be canceled. Are you sure you would like to delete this entry?\",\r\n                type: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No'\r\n          }).then(async (result) => {\r\n            if (result.value) {\r\n              await apiService.deletePost(id);\r\n              fetchData();\r\n              Swal.fire(\r\n                    'Press OK to back',\r\n                    'The post has been deleted',\r\n                    'success'\r\n                );\r\n            }\r\n          });\r\n  };\r\n  const renderItems = () => {\r\n    if (data) {\r\n      return (\r\n        <Grid container spacing={5}>\r\n          <Grid item xs={3}>\r\n          {/* <List> <ListItem alignItems=\"flex-start\"  component={Link}\r\n    to={`/post`}><ListItemText>Create New Post</ListItemText>\r\n</ListItem></List> */}\r\n\r\n<Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<AddIcon />}\r\n    onClick={() => history.replace('/post')}> Create New Post </Button>\r\n\r\n            {data.map((o, i) => (\r\n              <PostPastItem key={i} data={o} onCreate={onCreate} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            {data.map((o, i) => (\r\n              <PostItem key={i} data={o} onDelete={onDelete} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    } else return <div>No posts yet.</div>;\r\n  };\r\n\r\n  return renderItems();\r\n};\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { InputLabel, FormControl, Divider } from '@material-ui/core';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Grid, } from '@material-ui/core';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport { apiService } from \"../services\";\r\nimport { useStyles } from \"../helpers\";\r\n\r\nimport { withRouter, useParams, NavLink } from \"react-router-dom\";\r\n\r\n\r\nexport const PostEditView = (props) => {\r\n  const [data, setData] = React.useState([]);\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const { postId } = useParams();\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  const fetchData = async () => {\r\n    const post = await apiService.getPostDetail(postId);\r\n    console.log(post);\r\n    if (!!post) setData(post);\r\n  };\r\n  const onBack = () => {\r\n    //const {history}=props;\r\n    history.push('/');\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      id: postId,\r\n      title: event.target.title.value,\r\n      text: event.target.text.value,\r\n    }\r\n    console.log(data.title);\r\n    apiService.editPost(data)\r\n      .catch((err) => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700));\r\n  }\r\n\r\n  const onDelete = (id) => { };\r\n\r\n  const { id, title, text } = data;\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <h1>Edit Post</h1>\r\n      <form onSubmit={handleSubmit}>\r\n      <InputLabel htmlFor=\"title\">Title</InputLabel>\r\n      <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n          {/* <InputLabel htmlFor=\"post-title\">Title</InputLabel> */}\r\n        <TextField\r\n          id='title'\r\n          variant=\"outlined\" \r\n          multiline\r\n          rowsMax='1'\r\n          defaultValue={data.title}\r\n        />\r\n         </FormControl>\r\n        <br />\r\n        <InputLabel htmlFor=\"text\">Text</InputLabel>\r\n        <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n         \r\n        <TextField\r\n          id='text'\r\n          multiline\r\n          rowsMax='14'\r\n          rows={4}\r\n          variant=\"outlined\" \r\n          defaultValue={data.text}\r\n        />\r\n        </FormControl>\r\n        <br />\r\n        <Divider light />\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<SaveIcon />}\r\n          type='submit'> Save </Button>\r\n\r\n\r\n        <Button variant=\"contained\" color=\"secondary\" className={classes.button} startIcon={<DeleteIcon />}\r\n          onClick={() => history.replace('/')}> Cancel </Button>\r\n      </form>\r\n      \r\n    </Container >\r\n)\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { apiService, alertService } from '../services';\r\nimport { withRouter, useParams, NavLink } from \"react-router-dom\";\r\nimport { InputLabel, FormControl, Divider } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport  {useStyles}  from \"../helpers\";\r\n\r\nconst PostAddEditView = (props) => {\r\n    const {history}=props;\r\n    \r\n  const classes = useStyles();\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      const data = {title: event.target.title.value,\r\n                    text: event.target.text.value,\r\n                    }\r\n      apiService.createPost(data)\r\n      .catch((err) => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700) );\r\n     \r\n    //   axios.post('/api/post/posttodb', data)\r\n    //     .then(response => console.log(response))\r\n    //     .catch((err) => console.log(err))\r\n    //     .then(setTimeout(() => history.replace('/'), 700) )\r\n    }\r\n  \r\n  \r\n      return(\r\n        <Container maxWidth=\"sm\">\r\n            <h1>Create New Post</h1>\r\n        <div>\r\n             <Box component=\"div\">\r\n          <form onSubmit={handleSubmit}>\r\n              \r\n          <InputLabel htmlFor=\"title\">Title</InputLabel>\r\n          <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n            <TextField\r\n              id='title'\r\n              variant=\"outlined\" \r\n              />  </FormControl>\r\n            <br />\r\n            \r\n          <InputLabel htmlFor=\"text\">Text</InputLabel>\r\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n            <TextField\r\n              id='text'\r\n              variant=\"outlined\" \r\n              multiline\r\n              rows={4}\r\n              />  </FormControl>\r\n             <br />\r\n             <Button variant=\"contained\" color=\"primary\" className={classes.button} startIcon={<SaveIcon />}\r\n        type='submit'> Save </Button>\r\n         <Button variant=\"contained\" color=\"secondary\" className={classes.button} startIcon={<DeleteIcon />}\r\n    onClick={() => history.replace('/')}> Cancel </Button>\r\n             {/* <button type='submit'> Submit </button> */}\r\n             </form>\r\n            \r\n          {/* <button onClick={() => history.replace('/')}> Cancel </button> */}\r\n          \r\n          </Box>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { PostAddEditView };","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst BlogAppBar=()=> {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Blog\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nexport default BlogAppBar; ","import React from \"react\";\r\nimport BlogAppBar from \"./app-bar\";\r\nimport Box from '@material-ui/core/Box';\r\nconst BlogLayout = (props) => {\r\n  const { children } = props;\r\n  return (\r\n    <div>\r\n      <BlogAppBar />\r\n      <Box component=\"div\">\r\n      {children}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\nexport default BlogLayout;\r\n","\r\nimport React from \"react\";\r\nimport { HashRouter as Router, Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst renderRouteContainer = (Layout, Component, path, index) => (\r\n  <Route\r\n    key={index}\r\n    path={path}\r\n    exact\r\n    render={(props) => (\r\n      <Layout>\r\n        <Component {...props} />\r\n      </Layout>\r\n    )}\r\n  />\r\n);\r\n\r\nconst renderRoutes = (Layout, routes) => {\r\n  if (!routes || routes.length == 0) return null;\r\n  return routes.map(({ items, path: topPath, component: Component }, index) =>\r\n    items\r\n      ? items.map(({ path, component: Component }, index) =>\r\n          //can also combine path like => ${topPath}${path}\r\n          renderRouteContainer(Layout, Component, path, index)\r\n        )\r\n      : renderRouteContainer(Layout, Component, topPath, index)\r\n  );\r\n};\r\nexport const renderPublicRoutes = (Layout, routes) => {\r\n  return renderRoutes(Layout, routes);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  BlogLayoutRoutes\r\n} from \"./paths\";\r\n\r\nimport { BlogLayout} from \"../layouts\";\r\nimport { renderPublicRoutes } from \"./route-utils\";\r\nconst Routes = (props) => {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {renderPublicRoutes(BlogLayout, BlogLayoutRoutes)}\r\n        \r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","\nimport './App.css';\nimport  Routes  from '../routes';\n\nfunction App() {\n  return (\n    <Routes></Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}